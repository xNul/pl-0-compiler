Parsing History
===============
NONTERM: PROGRAM
NONTERM: BLOCK
NONTERM: CONST_DECLARATION
TOKEN  : <constsym, 'const'>
TOKEN  : <identsym, 'a'>
TOKEN  : <eqsym, '='>
TOKEN  : <numbersym, '0'>
TOKEN  : <semicolonsym, ';'>
NONTERM: VAR_DECLARATION
TOKEN  : <varsym, 'var'>
TOKEN  : <identsym, 'i'>
TOKEN  : <semicolonsym, ';'>
NONTERM: PROC_DECLARATION
TOKEN  : <procsym, 'procedure'>
TOKEN  : <identsym, 'myproc'>
TOKEN  : <semicolonsym, ';'>
NONTERM: BLOCK
NONTERM: CONST_DECLARATION
TOKEN  : <constsym, 'const'>
TOKEN  : <identsym, 'b'>
TOKEN  : <eqsym, '='>
TOKEN  : <numbersym, '1'>
TOKEN  : <semicolonsym, ';'>
NONTERM: VAR_DECLARATION
TOKEN  : <varsym, 'var'>
TOKEN  : <identsym, 'j'>
TOKEN  : <semicolonsym, ';'>
NONTERM: PROC_DECLARATION
TOKEN  : <procsym, 'procedure'>
TOKEN  : <identsym, 'insideproc'>
TOKEN  : <semicolonsym, ';'>
NONTERM: BLOCK
NONTERM: CONST_DECLARATION
TOKEN  : <constsym, 'const'>
TOKEN  : <identsym, 'c'>
TOKEN  : <eqsym, '='>
TOKEN  : <numbersym, '2'>
TOKEN  : <semicolonsym, ';'>
NONTERM: VAR_DECLARATION
TOKEN  : <varsym, 'var'>
TOKEN  : <identsym, 'k'>
TOKEN  : <semicolonsym, ';'>
NONTERM: PROC_DECLARATION
NONTERM: STATEMENT
TOKEN  : <beginsym, 'begin'>
NONTERM: STATEMENT
TOKEN  : <writesym, 'write'>
TOKEN  : <identsym, 'c'>
TOKEN  : <endsym, 'end'>
TOKEN  : <semicolonsym, ';'>
NONTERM: STATEMENT
TOKEN  : <beginsym, 'begin'>
NONTERM: STATEMENT
TOKEN  : <readsym, 'read'>
TOKEN  : <identsym, 'j'>
TOKEN  : <semicolonsym, ';'>
NONTERM: STATEMENT
TOKEN  : <callsym, 'call'>
TOKEN  : <identsym, 'insideproc'>
TOKEN  : <endsym, 'end'>
TOKEN  : <semicolonsym, ';'>
NONTERM: STATEMENT
TOKEN  : <beginsym, 'begin'>
NONTERM: STATEMENT
TOKEN  : <identsym, 'i'>
TOKEN  : <becomessym, ':='>
NONTERM: EXPRESSION
NONTERM: TERM
NONTERM: FACTOR
TOKEN  : <identsym, 'm'>
TOKEN  : <semicolonsym, ';'>
NONTERM: STATEMENT
TOKEN  : <callsym, 'call'>
TOKEN  : <identsym, 'myproc'>
TOKEN  : <endsym, 'end'>
TOKEN  : <periodsym, '.'>


Symbol Table
============
#0
   Type: CONST
   Name: a
  Value: 0
  Level: 0

#1
   Type: VAR
   Name: i
  Level: 0

#2
   Type: PROC
   Name: myproc
  Level: 0

#3
   Type: CONST
   Name: b
  Value: 1
  Level: 1

#4
   Type: VAR
   Name: j
  Level: 1

#5
   Type: PROC
   Name: insideproc
  Level: 1

#6
   Type: CONST
   Name: c
  Value: 2
  Level: 2

#7
   Type: VAR
   Name: k
  Level: 2


PARSING WAS SUCCESSFUL.
